# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: test
      run: mvn test
  
    - name: Set up Docker Compose
      uses: docker/setup-compose-action@v1

    - name: Build the Docker image
      run: docker compose build

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}          
        
    - name: Push Docker image to docker registry
      run: docker compose push

    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}
      
    - name: setup env
      run: |
        chmod +x ./setup_env.sh
        bash ./setup_env.sh

    - name: deploy to ssh
      run: |
        ssh -o StrictHostKeyChecking=no deploy@deves.xdi.uevora.pt "mkdir -p ./app"
        scp -o StrictHostKeyChecking=no .env ./docker-compose.prod.yml deploy@deves.xdi.uevora.pt:./app
        chmod +x ./deploy.sh
        bash ./deploy.sh

